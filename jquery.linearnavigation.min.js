
(function($,window,document,undefined){var pluginName='jquery-linear-navigation';$.fn.linearNavigation=function linearNavigation(itemsSelector,options){options=$.extend({activeIndex:0,axis:'both',autoReset:false,autoInit:false,autoInitOnDomChange:false,autoWrap:false,debug:false,disableHomeAndEndKeys:false},options);return this.each(function onEachMatchedEl(){if($.data(this,pluginName)===undefined){var $widget=$(this);var $collection=$widget.find(itemsSelector);var numItems=$collection.length;var currentItemIndex=null;var hasDoneInit=function(){return currentItemIndex!==null;};var needsInit=function(){return options.autoInit===false&&hasDoneInit()===false;};var storeData=function(){$collection.each(function onEach(index){$.data(this,pluginName,{idx:index});});};var resetModel=function(){$($collection.get(currentItemIndex)).trigger('linearNavigationReset',{fromIndex:currentItemIndex,toIndex:null});currentItemIndex=null;};var initModel=function(){if(currentItemIndex!==options.activeIndex){$($collection.get(options.activeIndex)).trigger('linearNavigationInit',{fromIndex:currentItemIndex,toIndex:options.activeIndex});currentItemIndex=options.activeIndex;}};var onFocusExit=function(e){e.stopPropagation();if(currentItemIndex!==null){if(options.autoInit===false){resetModel();}else{initModel();}}};var updateModel=function(goToIndex){if(goToIndex!==currentItemIndex){$($collection.get(goToIndex)).trigger('linearNavigationChange',{fromIndex:currentItemIndex,toIndex:goToIndex});currentItemIndex=goToIndex;}};var onDomChange=function(){$collection=$widget.find(itemsSelector);numItems=$collection.length;storeData();$widget.trigger('linearNavigationItemsChange');if(options.autoInitOnDomChange===true){initModel();}};var onClick=function(){updateModel($.data(this,pluginName).idx);};var onKeyNext=function(e){var isShiftKeyDown=e.originalEvent?e.originalEvent.shiftKey:false;if(needsInit()){initModel();}else if(isShiftKeyDown===false){var isOnLastEl=(currentItemIndex===numItems-1);var goToIndex=currentItemIndex;if(currentItemIndex===null){goToIndex=options.activeIndex;}else if(isOnLastEl){if(options.autoWrap===true){goToIndex=0;}}else{goToIndex=currentItemIndex+1;}
updateModel(goToIndex);}};var onKeyPrevious=function(e){var isShiftKeyDown=e.originalEvent?e.originalEvent.shiftKey:false;if(needsInit()){initModel();}else if(isShiftKeyDown===false){var isOnFirstEl=currentItemIndex===0;var goToIndex=currentItemIndex;if(currentItemIndex===null){goToIndex=options.activeIndex;}else if(isOnFirstEl){if(options.autoWrap===true){goToIndex=numItems-1;}}else{goToIndex=currentItemIndex-1;}
updateModel(goToIndex);}};var onHomeKey=function(){if(hasDoneInit()){updateModel(0);}};var onEndKey=function(){if(hasDoneInit()){updateModel(numItems-1);}};$widget.commonKeyDown();if(options.axis==='x'){$widget.on('leftArrowKeyDown',onKeyPrevious);$widget.on('rightArrowKeyDown',onKeyNext);}else if(options.axis==='y'){$widget.on('upArrowKeyDown',onKeyPrevious);$widget.on('downArrowKeyDown',onKeyNext);}else{$widget.on('leftArrowKeyDown upArrowKeyDown',onKeyPrevious);$widget.on('rightArrowKeyDown downArrowKeyDown',onKeyNext);}
if(options.disableHomeAndEndKeys===false){$widget.on('homeKeyDown',onHomeKey);$widget.on('endKeyDown',onEndKey);}
$widget.on('click',itemsSelector,onClick);if(options.autoReset===true){$widget.focusExit();$widget.on('focusExit',onFocusExit);}
$widget.on('domChange',onDomChange);jQuery.data(this,pluginName,{installed:'true'});if(options.autoInit===true){setTimeout(function(){initModel();},0);}
storeData();}else if(options.debug===true){console.log('debug: {pluginName} is already installed on {element}'.replace('{pluginName}',pluginName).replace('{element}',this));}});};}(jQuery,window,document));